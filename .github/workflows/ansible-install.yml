name: ansible-install
run-name: "${{ github.actor }} is testing Ansible install after commit \"${{ github.event.head_commit.message }}\""
on:
  push:
  workflow_dispatch:
jobs:
  install-seek-from-ansible:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        #os: [ubuntu-18.04,ubuntu-20.04,ubuntu-22.04,ubuntu-latest]
        os: [ubuntu-20.04]
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure ansible for local install
        run: |
          sed -i '/vault_password_file/d' ansible.cfg
          sed -i '/ssh_connection/d' ansible.cfg
          sed -i '/pipelining/d' ansible.cfg
          sed -i 's/\- hosts\: \[servers\]/\- hosts\: localhost/g' Deploy-SEEK.yml
          sed -i '/\- hosts\: localhost/a \ \ connection\: local' Deploy-SEEK.yml
          sed -i 's/user_var\: username/user_var\: runner/' group_vars/vars.yml
          sed -i 's/git_dest\: \/home\/username/git_dest\: \/home\/runner\/work/' group_vars/vars.yml
          sed -i '/sql_user\: sql_username/a sql_password: mysqlpassword' group_vars/vars.yml

      - name: Prepares system for ansible install
        run: |
          sudo apt install acl -y

      - name: tree
        run: |
          sudo tree / -L 4 -d

      - name: Install SEEK through ansible
        run: ansible-playbook Deploy-SEEK.yml

      - name: Runs seek unit tests
        run: |
          cd /home/runner/work/SEEK
          bundle exec rails test tests/unit
      
      - name: Runs seek integration tests
        run: |
          cd /home/runner/work/SEEK
          bundle exec rails test tests/integration

      - name: Runs seek functional tests
        run: |
          cd /home/runner/work/SEEK
          bundle exec rails test tests/functional


  # molecule:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         path: "${{ github.repository }}"
          
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'

  #     - name: Install dependencies.
  #       run: pip3 install yamllint ansible-lint ansible "molecule[lint,docker]"

  #     - name: Install Galaxy dependencies.
  #       run: ansible-galaxy collection install community.docker

  #     - name: Run molecule
  #       run: "cd ansible/molecule/molecule_test_role && molecule test"
  #       env:
  #         PY_COLORS: '1'
  #         ANSIBLE_FORCE_COLOR: '1'

